@model PagedList.IPagedList<Interscool.Models.Uni>
@using PagedList.Mvc;
<!-- slider_area_start -->
<div class="slider_area">
    <div class="slider_active owl-carousel">
        <div class="single_slider  d-flex align-items-center slider_bg_1 overlay" style="height: 400px; ">
            <div class="container">
            </div>
        </div>
    </div>
</div>
<!-- slider_area_end -->
<div class="container">
    <div class="text-center">
        <h3 style="height: 40px;padding-top: 20px;font-weight: bold;">
            University List
        </h3>
    </div>
</div>
<div class="container">
    <p>
        @*@Html.ActionLink("Create New", "Create")*@
        @using (Html.BeginForm("Index", "UniList", FormMethod.Get))
        {
            <h3 class="text-heading">
                Select one State:
            </h3>
            <div class="editor-field">
                @Html.DropDownList("state",(IEnumerable<SelectListItem>)ViewBag.state)
            </div>
            <input type="submit" class="btn btn-success" value="Search" style="border-left-width: 0px; margin-left: 20px;" />
        }
    </p>
    <table class="table">
        <tr>
            <th>
                @Html.ActionLink("Name", "Index", new { sortOrder = ViewBag.NameSP, present = ViewBag.present })
            </th>
            <th>
                State
            </th>
            <th>
                Type
            </th>
            @*        <th>
                    @Html.DisplayNameFor(model => model.Address)
                </th>*@
            <th></th>
        </tr>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.State)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Type)
                </td>
                @*            <td>
                        @Html.DisplayFor(modelItem => item.Address)
                    </td>*@
                <td>
                    @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                    @Html.ActionLink("Details", "Details", new { id = item.Id }) |
                    @Html.ActionLink("Delete", "Delete", new { id = item.Id })
                </td>
            </tr>
        }
    </table>
    <br />
    Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

    @Html.PagedListPager(Model, page => Url.Action("Index", new { page, sortOrder = ViewBag.currentPage, present = ViewBag.present }))
    <h2>Location</h2>
    <div id="map" style="height:500px"></div>
</div>
@* This is for the mapbox map. *@
<script src='https://api.mapbox.com/mapbox-gl-js/v1.12.0/mapbox-gl.js'></script>
<link href='https://api.mapbox.com/mapbox-gl-js/v1.12.0/mapbox-gl.css' rel='stylesheet' />
@*This is used for the Geocoding Mapbox API*@
<script src='https://api.mapbox.com/mapbox-gl-js/plugins/mapbox-gl-geocoder/v4.4.2/mapbox-gl-geocoder.min.js'></script>
<link rel='stylesheet' href='https://api.mapbox.com/mapbox-gl-js/plugins/mapbox-gl-geocoder/v4.4.2/mapbox-gl-geocoder.css' type='text/css' />
<style>
    .mapboxgl-popup {
        color: black;
    }
</style>
<script>
    mapboxgl.accessToken = 'pk.eyJ1IjoieWxpdTAyMDMiLCJhIjoiY2sxc2l3d2N2MDN2dzNibXVwcGNuMnlvNSJ9.OchVPoP-iVNFCF8EbQkajA';
    var ll = new mapboxgl.LngLat(-123.9749, 40.7736);
    var map = new mapboxgl.Map({
        container: 'map',
        style: 'mapbox://styles/mapbox/streets-v11',
        center: [145.0424543, -37.8773989],
        zoom: 11
    });
    var marker = new mapboxgl.Marker()
        .setLngLat([145.0424543, -37.8773989])
        .addTo(map);
</script>
